package io.anand.springboot;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class UserService {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    private ArrayList<User> users;

    public UserService () {
        users = new ArrayList<User> ();
        users.add(new User ("John", "Elementary", 192838, 145354545));
        users.add(new User ("Ravi", "Middle", 192298, 145312144));
        users.add(new User ("David", "Elementary", 192848, 145354652));
        users.add(new User ("Mary", "Middle", 192858, 145351234));
        users.add(new User ("Vinh", "High School", 192538, 14534567));
        users.add(new User ("Surya", "High School", 193138, 14538613));
    }

    public List<User> getUsers () {
        return (List<User>) userRepository.findAll();
        // return users;
    }

    public User getUser (String userName) {
        User user = userRepository.findByName(userName);
        if (null == user)
            return user;

        try {
            return users.stream().filter(u -> u.getName().equals(user.getName())).findFirst().orElse(null);
        } catch (Exception e) {
            System.out.println("Caught Exception looking up user: " + userName + ", e: " + e);
        }
        return null;
    }

    public User updUser (String userName, User updUser) {
        User user = userRepository.save(updUser);
        if (null == user)
            return user;

        try {
            int index = users.indexOf(users.stream().filter(u -> u.getId() == (user.getId())).findFirst().orElse(null));
            if (-1 == index)
                users.add(user);
            else
                users.set(index, updUser);
            return user;
        } catch (Exception e) {
            System.out.println("Caught Exception looking up user: " + updUser.getName() + ", e: " + e);
            return null;
        }
    }

    public User addUser (User user) {
        User addedUser = userRepository.save(user);
        if (null == addedUser)
            return addedUser;

        try {
            int index = users.indexOf(users.stream().filter(u -> u.getId() == (addedUser.getId())).findFirst().orElse(null));
            if (-1 == index)
                users.add(user);
            else
                users.set(index, user);
            return user;
        } catch (Exception e) {
            System.out.println("Caught Exception adding user: " + user.getName() + ", e: " + e);
            return null;
        }
    }

    public User remUser (String userName) {
        users.remove(getUser(userName));
        User remUser = userRepository.findByName(userName);
        if (null == remUser)
            return remUser;

        userRepository.delete(remUser);
        return remUser;
     }
}
